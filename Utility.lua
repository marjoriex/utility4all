getgenv().Utility = {};

function Utility:genv() return getgenv() end;
function Utility:renv() return getrenv() end;
function Utility:reg() return getreg() end;
function Utility:gc() return getgc() end;
function Utility:instances() return getinstances() end;
function Utility:ninstances() return getnilinstances() end;
function Utility:modules() return getloadedmodules() end;
function Utility:connections() return getconnections() end;
function Utility:fire_click(clickdetector_Detector, int_Distance) return fireclickdetector(clickdetector_Detector, int_Distance) end;
function Utility:fire_prox(proximityprompt_Prompt, int_Distance) return fireproximityprompt(proximityprompt_Prompt, int_Distance) end;
function Utility:fire_touch(instance_Part, basepart_ToTouch, int_Toggle) return firetouchinterest(instance_Part, basepart_ToTouch, int_Toggle) end;
function Utility:network(instance_Part) return isnetworkowner(instance_Part) end;
function Utility:hidden_prop(instance_Object, string_Property) return gethiddenproperty(instance_Object, string_Property) end;
function Utility:set_hidden_prop(instance_Object, string_Property, variant_Value) return sethiddenproperty(instance_Object, string_Property, variant_Value) end;
function Utility:set_sim_dist(uint_SimulationRadius, uint_MaxSimulationRadius) return setsimulationradius(uint_SimulationRadius, uint_MaxSimulationRadius) end;
function Utility:senv(union_Script) return getsenv(union_Script) end;
function Utility:get_call_script() return getcallingscript() end;
function Utility:get_scriptcl(union_Script) return getscriptclosure(union_Script) end;
function Utility:get_scripthash(union_Script) return getscripthash(union_Script) end;
function Utility:get_rawmeta(table_Value) return getrawmetatable(table_Value) end;
function Utility:set_rawmeta(object_o, table_mt) return setrawmetatable(object_o, table_mt) end;
function Utility:set_readonly(table_t, bool_val) return setreadonly(table_t, bool_val) end;
function Utility:is_windowactive() return iswindowactive() end;
function Utility:keypress(uint_keycode) return keypress(uint_keycode) end;
function Utility:keyrelease(uint_keycode) return keyrelease(uint_keycode) end;
function Utility:leftclick() return mouse1click() end;
function Utility:leftpress() return mouse1press() end;
function Utility:leftrelease() return mouse1release() end;
function Utility:rightclick() return mouse2click() end;
function Utility:rightpress() return mouse2press() end;
function Utility:rightrelease() return mouse2release() end;
function Utility:mousescroll(number_px) return mousescroll(number_px) end;
function Utility:mouse_m_rel(number_x, number_y) return mousemoverel(number_x, number_y) end;
function Utility:mouse_m_abs(number_x, number_y) return mousemoveabs(number_x, number_y) end;
function Utility:hook_fn(function_old, function_hook) return hookfunction(function_old, function_hook) end;
function Utility:hook_mt(object_o, string_metamethod, function_hook) return hookmetamethod(object_o, string_metamethod, function_hook) end;
function Utility:new_cc(function_fn) return newcclosure(function_fn) end;
function Utility:f_loadstring(string_chunk, string_chunk_name) return loadstring(string_chunk, string_chunk_name) end;
function Utility:check_c() return checkcaller() end;
function Utility:check_lc(function_fn) return islclosure(function_fn) end;
function Utility:dump_string(string_Script) return dumpstring(string_Script) end;
function Utility:decompile(union_Script, string_bool_mode, number_timeout) return decompile(union_Script, string_bool_mode, number_timeout) end;
function Utility:console_log(string_message) return rconsoleprint(string_message) end;
function Utility:console_info(string_message) return rconsoleinfo(string_message) end;
function Utility:console_warn(string_message) return rconsolewarn(string_message) end;
function Utility:console_error(string_message) return rconsoleerror(string_message) end;
function Utility:console_clear(string_message) return rconsoleclear(string_message) end;
function Utility:console_name(string_name) return rconsolename(string_name) end;
function Utility:console_input() return rconsoleinput() end;
function Utility:internal_log(string_message, byte_red, byte_green, byte_blue) return printconsole(string_message, byte_red, byte_green, byte_blue) end;
function Utility:read_file(string_path) return readfile(string_path) end;
function Utility:write_file(string_path, string_contents) return writefile(string_path, string_contents) end;
function Utility:append_file(string_path, string_content) return appendfile(string_path, string_content) end;
function Utility:load_file(string_path) return loadfile(string_path) end;
function Utility:list_files(string_folder) return listfiles(string_path) end;
function Utility:is_file(string_path) return isfile(string_path) end;
function Utility:is_folder(string_path) return isfolder(string_path) end;
function Utility:mk_folder(string_path) return makefolder(string_path) end;
function Utility:dl_folder(string_path) return delfolder(string_path) end;
function Utility:dl_file(string_path) return delfile(string_path) end;
function Utility:set_cb(string_data) return setclipboard(string_data) end;
function Utility:set_fflag(string_FFlag, string_Value) return setfflag(string_FFlag, string_Value) end;
function Utility:set_ncm(string_method) return setnamecallmethod(string_method) end;
function Utility:get_syn_asset(string_path) return getsynasset(string_path) end;
function Utility:get_specinfo(instance_Object) return getspecialinfo(instance_Object) end;
function Utility:save_instance(table_t) return saveinstance(table_t) end;
function Utility:message_box(string_text, string_caption, uint_flags) return messagebox(string_text, string_caption, uint_flags) end;
function Utility:bdiv(uint_bdiv, uint_divisor) return bit.bdiv(uint_bdiv, uint_divisor) end;
function Utility:badd(uint_a, uint_b) return bit.badd(uint_a, uint_b) end;
function Utility:bsub(uint_a, uint_b) return bit.bsub(uint_a, uint_b) end;
function Utility:bmul(uint_value, uint_by) return bit.bmul(uint_value, uint_by) end;
function Utility:band(uint_value, uint_by) return bit.band(uint_value, uint_by) end;
function Utility:bor(uint_value, uint_by) return bit.bor(uint_value, uint_by) end;
function Utility:bxor(uint_value, uint_by) return bit.bxor(uint_value, uint_by) end;
function Utility:bnot(uint_val) return bit.bnot(uint_val) end;
function Utility:bswap(uint_value) return bit.bswap(uint_value) end;
function Utility:ror(int_value, int_rotate_count) return bit.ror(int_value, int_rotate_count) end;
function Utility:rol(int_value, int_rotate_count) return bit.rol(int_value, int_rotate_count) end;
function Utility:tohex(uint_value) return bit.tohex(uint_value) end;
function Utility:tobit(uint_value) return bit.tobit(uint_value) end;
function Utility:lshift(uint_value, uint_by) return bit.lshift(uint_value, uint_by) end;
function Utility:rshift(uint_value, uint_by) return bit.rshift(uint_value, uint_by) end;
function Utility:arshift(int_value, int_shift_count) return bit.arshift(int_value, int_shift_count) end;
function Utility:encrypt(string_data, string_key) return syn.crypt.encrypt(string_data, string_key) end;
function Utility:decrypt(string_data, string_key) return syn.crypt.decrypt(string_data, string_key) end;
function Utility:base64_e(string_data) return syn.crypt.base64.encode(string_data) end;
function Utility:base64_d(string_data) return syn.crypt.decode(string_data) end;
function Utility:hash(string_data) return syn.crypt.hash(string_data) end;
function Utility:derive(string_value, uint_len) return syn.crypt.derive(string_value, uint_len) end;
function Utility:random(uint_size) return syn.crypt.random(uint_size) end;
function Utility:c_encrypt(string_cipher, string_data, string_key, string_iv_nonce) return syn.crypt.custom.encrypt(string_cipher, string_data, string_key, string_iv_nonce) end;
function Utility:c_decrypt(string_cipher, string_data, string_key, string_iv_nonce) return syn.crypt.custom.decrypt(string_cipher, string_data, string_key, string_iv_nonce) end;
function Utility:c_hash(string_algorithm, string_data) return syn.crypt.custom.hash(string_algorithm, string_data) end;
function Utility:get_constants(union_function, number_fi) return debug.getconstants(union_function, number_fi) end;
function Utility:get_constant(union_function, number_index) return debug.getconstant(union_function, number_index) end;
function Utility:set_constant(union_function, number_index, union_value) return debug.setconstant(union_function, number_index, union_value) end;
function Utility:get_upvalues(union_function, number_fi) return debug.getupvalues(union_function, number_fi) end;
function Utility:get_upvalue(union_function, number_index) return debug.getupvalue(union_function, number_index) end;
function Utility:set_upvalue(union_function, number_index, table_value) return debug.setupvalue(union_function, number_index, table_value) end;
function Utility:get_protos(union_function) return debug.getprotos(union_function) end;
function Utility:get_proto(union_function, int_index, bool_activated) return debug.getproto(union_function, int_index, bool_activated) end;
function Utility:set_proto(union_function, number_index, function_replacement) return debug.setproto(union_function, number_index, function_replacement) end;
function Utility:get_stack(number_indice) return debug.getstack(number_indice) end;
function Utility:set_stack(number_indice, number_indice2, table_Value) return debug.setstack(number_indice, number_indice2, table_Value) end;
function Utility:set_meta(table_o, table_mt) return debug.setmetatable(table_o, table_mt) end;
function Utility:get_reg() return debug.getregistry() end;
function Utility:get_info(union_function, number_fi, string_w) return debug.getinfo(union_function, number_fi, string_w) end;
function Utility:cache_rp(instance_obj, instance_t_obj) return syn.cache_replace(instance_obj, instance_t_obj) end;
function Utility:cache_inv(instance_obj) return syn.cahce_invalidate(instance_obj) end;
function Utility:set_thread_id(uint_n) return syn.set_thread_identity(uint_n) end;
function Utility:get_thread_id() return syn.get_thread_identity() end;
function Utility:is_cached(instance_obj) return syn.is_cached(instance_obj) end;
function Utility:write_clip(string_contentr) return syn.write_clipboard(string_contentr) end;
function Utility:queue_tp(string_code) return syn.queue_on_teleport(string_code) end;
function Utility:is_beta() return syn.is_beta() end;
function Utility:request(table_options) return syn.request(table_options) end;
function Utility:create_sfn(string_code) return syn.create_secure_function(string_code) end;
function Utility:run_sfn(string_code) return syn.run_secure_function(string_code) end;
function Utility:ws_create(string_url) return syn.websocket.connect(string_url) end;

return Utility;
